#!/usr/bin/env python3

# ---------------------------------------------------------------------------
#
# oms2outline, a tool that writes an outline from an OpenManuscript database 
#
# ---------------------------------------------------------------------------

import argparse
import configparser
import os
import openms
import openms.outline


# ---------------------------------------------------------------------------
#
# get initial settings from settings file, if there is one
#
# ---------------------------------------------------------------------------
conf_parser = argparse.ArgumentParser(
    # Turn off help, so we print all options in response to -h
    add_help=False
    )

args, remaining_argv = conf_parser.parse_known_args()

# ---------------------------------------------------------------------------
#
# command line options
#
# ---------------------------------------------------------------------------
# Don't surpress add_help here so it will handle -h
parser = argparse.ArgumentParser(
    # Don't mess with format of description
    formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    # Inherit options from config_parser
    parents=[conf_parser]
)

# parser.set_defaults(**defaults)
parser.add_argument( "--authorfile", default="author.json",
    help="read author data from this file. Must be located in MANUSCRIPTDIR")
parser.add_argument( "--exclude_tags", nargs='+', type=str,
    help="add chapter tags that are considered 'off'")
parser.add_argument( "--include_tags", nargs='+', type=str,
    help="add chapter tags that are considered 'on'")
parser.add_argument( "--manuscriptdir", default=".", 
    help="directory that contains the manuscript data")
parser.add_argument( "--manuscriptfile", default="manuscript.json", 
    help="read manuscript definition from this file. Must be located in MANUSCRIPTDIR")
parser.add_argument( "--outputfile", default="manuscript.html", 
    help="write output to this file")
parser.add_argument( "--columns", nargs="+", default = ["Title", "Arc",
    "POV", "TOD", "Setting", "Scenes", "Desc"], 
    help="set which columns of the outline to print when creating outline")
parser.add_argument( "--version", action="version", 
                        version=str(openms.core.get_version()) ) 

args = parser.parse_args(remaining_argv)


# -----------------------------------------------------------------------------
#
# execute
#
# -----------------------------------------------------------------------------

# settings
openms.core.set_authorfile(args.authorfile)
openms.core.set("exclude_tags", args.exclude_tags)
openms.core.set("include_tags", args.include_tags)
openms.core.set_manuscriptdir(args.manuscriptdir)
openms.core.set_manuscriptfile(args.manuscriptfile)
openms.core.set("outputfile", args.outputfile)
openms.core.set("columns", args.columns)

# check existence of the files we will need
if not os.path.isfile(openms.core.get_authorfile()):
    print("ERROR: cannot open file: " + openms.core.get_authorfile())
    exit(0)

if not os.path.isfile( openms.core.get_manuscriptfile() ):
    print("ERROR: cannot open file: " + openms.core.get_manuscriptfile())
    exit(0)

# read
openms.core.read_data()

# write
openms.outline.write_outline()
